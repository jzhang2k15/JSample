def isUserModule = isUserModule.toBoolean()
if (isUserModule) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isUserModule) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
            }
        }
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.name)
    }
}

dependencies {
    api fileTree(dir: "libs", include: ["*.jar"])

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation project(path: ':base')
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "androidx.navigation:navigation-fragment-ktx:$jetpack_version"
    implementation "androidx.navigation:navigation-ui-ktx:$jetpack_version"

    // AndroidUtils
    implementation 'com.blankj:utilcodex:1.29.0'

    // ARouter
    implementation 'com.alibaba:arouter-api:1.5.0'
    kapt 'com.alibaba:arouter-compiler:1.2.2'

    // FileDownloader
    // core
    api "com.liulishuo.okdownload:okdownload:$filedownloader_version"
    // provide sqlite to store breakpoints
    api "com.liulishuo.okdownload:sqlite:$filedownloader_version"
    // provide okhttp to connect to backend
    // and then please import okhttp dependencies by yourself
    api "com.liulishuo.okdownload:okhttp:$filedownloader_version"
    // provide interface to match filedownloader
    api "com.liulishuo.okdownload:filedownloader:$filedownloader_version"
    // provide interface for kotlin extension
    api "com.liulishuo.okdownload:ktx:$filedownloader_version"
    // If you are using com.liulishuo.okdownload:okhttp
    api 'com.squareup.okhttp3:okhttp:3.12.1'

}